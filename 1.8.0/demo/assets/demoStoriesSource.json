{
  "story-00-basic.html": "<div class=\"demo\" [formGroup]=\"form\">\n\n  <div class=\"row\">\n    <span>Is Schr√∂dingers cat dead?</span>\n\n    <cloukit-toggle\n      formControlName=\"isCatDead\"\n    ></cloukit-toggle>\n\n    <button\n      type=\"button\"\n      (click)=\"toggleFormDisabled()\"\n      class=\"superButton\"\n    >{{ isFormDisabled ? 'enable' : 'disable' }} form</button>\n  </div>\n\n\n  <br><br>\n\n  Reactive Form Result:\n  <pre *ngIf=\"form?.value\">{{form.value | json}}</pre>\n\n</div>\n",
  "story-00-basic.ts": "import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DemoComponent } from '../demo.component';\n\n@Component({\n  selector: 'story-00-basic',\n  templateUrl: './story-00-basic.html',\n  styles: [ ].concat(DemoComponent.sharedStyles),\n})\nexport class Story00Component {\n\n  public isFormDisabled = false;\n\n  public form = new FormGroup({\n    isCatDead: new FormControl(false)\n  });\n\n  public toggleFormDisabled() {\n    if (this.isFormDisabled) {\n      this.form.enable();\n      this.isFormDisabled = false;\n    } else {\n      this.form.disable();\n      this.isFormDisabled = true;\n    }\n  }\n}\n",
  "story-01-themed.html": "<div class=\"demo\" [formGroup]=\"form\">\n\n  <div class=\"row\">\n\n    <span>Theme: toggle--cornered</span>\n\n    <cloukit-toggle\n      formControlName=\"myBool\"\n      theme=\"toggle--cornered\"\n    ></cloukit-toggle>\n\n  </div>\n\n  <br><br>\n\n  <div class=\"row\">\n\n    <span>Theme: toggle--awesome</span>\n\n    <cloukit-toggle\n      formControlName=\"myBoolTwo\"\n      theme=\"toggle--awesome\"\n    ></cloukit-toggle>\n\n  </div>\n\n</div>\n",
  "story-01-themed.ts": "import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DemoComponent } from '../demo.component';\nimport { CloukitThemeService } from '@cloukit/theme';\nimport { CloukitToggleComponentThemeDefault } from '../../index';\n\nexport class AwesomeToggleTheme extends CloukitToggleComponentThemeDefault {\n  constructor() {\n    super();\n    const wrapperUntoggledBase = this.getElementTheme('wrapper', 'toggled', 'base');\n    wrapperUntoggledBase.styleDef.style.backgroundColor = 'blue';\n  }\n}\n\n@Component({\n  selector: 'story-01-themed',\n  templateUrl: './story-01-themed.html',\n  styles: [ '.row span { width:200px; }' ].concat(DemoComponent.sharedStyles),\n})\nexport class Story01Component {\n\n  public form = new FormGroup({\n    myBool: new FormControl(false),\n    myBoolTwo: new FormControl(true),\n  });\n\n  constructor(private cloukitThemeService: CloukitThemeService) {\n    this.cloukitThemeService.registerComponentTheme('toggle--awesome', new AwesomeToggleTheme());\n  }\n\n}\n"
}